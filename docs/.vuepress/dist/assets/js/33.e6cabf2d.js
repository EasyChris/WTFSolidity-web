(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{433:function(t,s,a){t.exports=a.p+"assets/img/28-1.1cd80e30.png"},434:function(t,s,a){t.exports=a.p+"assets/img/28-2.4b3fb44e.png"},511:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"solidity极简入门-28-hash"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#solidity极简入门-28-hash"}},[t._v("#")]),t._v(" Solidity极简入门: 28. Hash")]),t._v(" "),n("p",[t._v("我最近在重新学solidity，巩固一下细节，也写一个“Solidity极简入门”，供小白们使用（编程大佬可以另找教程），每周更新1-3讲。")]),t._v(" "),n("p",[t._v("欢迎关注我的推特："),n("a",{attrs:{href:"https://twitter.com/0xAA_Science",target:"_blank",rel:"noopener noreferrer"}},[t._v("@0xAA_Science"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("欢迎加入WTF科学家社区，内有加微信群方法："),n("a",{attrs:{href:"https://discord.gg/5akcruXrsk",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("所有代码和教程开源在github（1024个star发课程认证，2048个star发社群NFT）: "),n("a",{attrs:{href:"https://github.com/AmazingAng/WTFSolidity",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/AmazingAng/WTFSolidity"),n("OutboundLink")],1)]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("哈希函数（hash function）是一个密码学概念，它可以将任意长度的消息转换为一个固定长度的值，这个值也称作哈希（hash）。这一讲，我们简单介绍一下哈希函数及在"),n("code",[t._v("solidity")]),t._v("的应用")]),t._v(" "),n("h2",{attrs:{id:"hash的性质"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hash的性质"}},[t._v("#")]),t._v(" Hash的性质")]),t._v(" "),n("p",[t._v("一个好的哈希函数应该具有以下几个特性：")]),t._v(" "),n("ul",[n("li",[t._v("单向性：从输入的消息到它的哈希的正向运算简单且唯一确定，而反过来非常难，只能靠暴力枚举。")]),t._v(" "),n("li",[t._v("灵敏性：输入的消息改变一点对它的哈希改变很大。")]),t._v(" "),n("li",[t._v("高效性：从输入的消息到哈希的运算高效。")]),t._v(" "),n("li",[t._v("均一性：每个哈希值被取到的概率应该基本相等。")]),t._v(" "),n("li",[t._v("抗碰撞性：\n"),n("ul",[n("li",[t._v("弱抗碰撞性：给定一个消息"),n("code",[t._v("x")]),t._v("，找到另一个消息"),n("code",[t._v("x'")]),t._v("使得"),n("code",[t._v("hash(x) = hash(x')")]),t._v("是困难的。")]),t._v(" "),n("li",[t._v("强抗碰撞性：找到任意"),n("code",[t._v("x")]),t._v("和"),n("code",[t._v("x'")]),t._v("，使得"),n("code",[t._v("hash(x) = hash(x')")]),t._v("是困难的。")])])])]),t._v(" "),n("h2",{attrs:{id:"hash的应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hash的应用"}},[t._v("#")]),t._v(" Hash的应用")]),t._v(" "),n("ul",[n("li",[t._v("生成数据唯一标识")]),t._v(" "),n("li",[t._v("加密签名")]),t._v(" "),n("li",[t._v("安全加密")])]),t._v(" "),n("h2",{attrs:{id:"keccak256"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#keccak256"}},[t._v("#")]),t._v(" Keccak256")]),t._v(" "),n("p",[n("code",[t._v("Keccak256")]),t._v("函数是"),n("code",[t._v("solidity")]),t._v("中最常用的哈希函数，用法非常简单：")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[t._v("哈希 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keccak256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("数据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"keccak256和sha3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#keccak256和sha3"}},[t._v("#")]),t._v(" Keccak256和sha3")]),t._v(" "),n("p",[t._v("这是一个很有趣的事情：")]),t._v(" "),n("ol",[n("li",[t._v("sha3由keccak标准化而来，在很多场合下Keccak和SHA3是同义词，但在2015年8月SHA3最终完成标准化时，NIST调整了填充算法。"),n("strong",[t._v("所以SHA3就和keccak计算的结果不一样")]),t._v("，这点在实际开发中要注意。")]),t._v(" "),n("li",[t._v("以太坊在开发的时候sha3还在标准化中，所以采用了keccak，所以Ethereum和Solidity智能合约代码中的SHA3是指Keccak256，而不是标准的NIST-SHA3，为了避免混淆，直接在合约代码中写成Keccak256是最清晰的。")])]),t._v(" "),n("h3",{attrs:{id:"生成数据唯一标识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成数据唯一标识"}},[t._v("#")]),t._v(" 生成数据唯一标识")]),t._v(" "),n("p",[t._v("我们可以利用"),n("code",[t._v("keccak256")]),t._v("来生成一些数据的唯一标识。比如我们有几个不同类型的数据："),n("code",[t._v("uint")]),t._v("，"),n("code",[t._v("string")]),t._v("，"),n("code",[t._v("address")]),t._v("，我们可以先用"),n("code",[t._v("abi.encodePacked")]),t._v("方法将他们打包编码，然后再用"),n("code",[t._v("keccak256")]),t._v("来生成唯一标识：")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hash")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _addr\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pure")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keccak256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodePacked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _addr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"弱抗碰撞性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#弱抗碰撞性"}},[t._v("#")]),t._v(" 弱抗碰撞性")]),t._v(" "),n("p",[t._v("我们用"),n("code",[t._v("keccak256")]),t._v("演示一下之前讲到的弱抗碰撞性，即给定一个消息"),n("code",[t._v("x")]),t._v("，找到另一个消息"),n("code",[t._v("x'")]),t._v("使得"),n("code",[t._v("hash(x) = hash(x')")]),t._v("是困难的。")]),t._v(" "),n("p",[t._v("我们给定一个消息"),n("code",[t._v("0xAA")]),t._v("，试图去找另一个消息，使得它们的哈希值相等：")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 弱抗碰撞性")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("weak")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" string1\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keccak256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodePacked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("大家可以试个10次，看看能不能幸运的碰撞上。")]),t._v(" "),n("h3",{attrs:{id:"强抗碰撞性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强抗碰撞性"}},[t._v("#")]),t._v(" 强抗碰撞性")]),t._v(" "),n("p",[t._v("我们用"),n("code",[t._v("keccak256")]),t._v("演示一下之前讲到的强抗碰撞性，即找到任意不同的"),n("code",[t._v("x")]),t._v("和"),n("code",[t._v("x'")]),t._v("，使得"),n("code",[t._v("hash(x) = hash(x')")]),t._v("是困难的。")]),t._v(" "),n("p",[t._v("我们构造一个函数"),n("code",[t._v("strong")]),t._v("，接收两个不同的"),n("code",[t._v("string")]),t._v("参数"),n("code",[t._v("string1")]),t._v("和"),n("code",[t._v("string2")]),t._v("，然后判断它们的哈希是否相同：")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强抗碰撞性")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("strong")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" string1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" string2\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pure")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keccak256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodePacked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keccak256")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodePacked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("大家可以试个10次，看看能不能幸运的碰撞上。")]),t._v(" "),n("h2",{attrs:{id:"在remix上验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在remix上验证"}},[t._v("#")]),t._v(" 在remix上验证")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("部署合约查看唯一标识的生成结果\n"),n("img",{attrs:{src:a(433),alt:""}})])]),t._v(" "),n("li",[n("p",[t._v("验证哈希函数的灵敏性，以及强、弱抗碰撞性\n"),n("img",{attrs:{src:a(434),alt:""}})])])]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("这一讲，我们介绍了什么是哈希函数，以及如何使用"),n("code",[t._v("solidity")]),t._v("最常用的哈希函数"),n("code",[t._v("keccak256")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);