(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{382:function(t,s,a){t.exports=a.p+"assets/img/13-1.42d8e8a6.png"},383:function(t,s,a){t.exports=a.p+"assets/img/13-2.ca20ff0f.png"},384:function(t,s,a){t.exports=a.p+"assets/img/13-3.9fba2e32.png"},385:function(t,s,a){t.exports=a.p+"assets/img/13-4.2e812f46.png"},386:function(t,s,a){t.exports=a.p+"assets/img/13-5.32bd7ada.png"},387:function(t,s,a){t.exports=a.p+"assets/img/13-6.d25654e1.png"},388:function(t,s,a){t.exports=a.p+"assets/img/13-7.39a52efa.png"},389:function(t,s,a){t.exports=a.p+"assets/img/13-8.3bf69b27.png"},390:function(t,s,a){t.exports=a.p+"assets/img/13-9.d05667e1.png"},486:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"solidity极简入门-13-继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#solidity极简入门-13-继承"}},[t._v("#")]),t._v(" Solidity极简入门: 13. 继承")]),t._v(" "),n("p",[t._v("我最近在重新学solidity，巩固一下细节，也写一个“Solidity极简入门”，供小白们使用（编程大佬可以另找教程），每周更新1-3讲。")]),t._v(" "),n("p",[t._v("欢迎关注我的推特："),n("a",{attrs:{href:"https://twitter.com/0xAA_Science",target:"_blank",rel:"noopener noreferrer"}},[t._v("@0xAA_Science"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("WTF技术社群discord，内有加微信群方法："),n("a",{attrs:{href:"https://discord.gg/5akcruXrsk",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("所有代码和教程开源在github（1024个star发课程认证，2048个star发社群NFT）: "),n("a",{attrs:{href:"https://github.com/AmazingAng/WTFSolidity",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/AmazingAng/WTFSolidity"),n("OutboundLink")],1)]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("这一讲，我们介绍"),n("code",[t._v("solidity")]),t._v("中的继承（"),n("code",[t._v("inheritance")]),t._v("），包括简单继承，多重继承，以及修饰器（"),n("code",[t._v("modifier")]),t._v("）和构造函数（"),n("code",[t._v("constructor")]),t._v("）的继承。")]),t._v(" "),n("h2",{attrs:{id:"继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),n("p",[t._v("继承是面向对象编程很重要的组成部分，可以显著减少重复代码。如果把合约看作是对象的话，"),n("code",[t._v("solidity")]),t._v("也是面向对象的编程，也支持继承。")]),t._v(" "),n("h3",{attrs:{id:"规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[t._v("#")]),t._v(" 规则")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("virtual")]),t._v(": 父合约中的函数，如果希望子合约重写，需要加上"),n("code",[t._v("virtual")]),t._v("关键字。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("override")]),t._v("：子合约重写了父合约中的函数，需要加上"),n("code",[t._v("override")]),t._v("关键字。")])])]),t._v(" "),n("h3",{attrs:{id:"简单继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单继承"}},[t._v("#")]),t._v(" 简单继承")]),t._v(" "),n("p",[t._v("我们先写一个简单的爷爷合约"),n("code",[t._v("Yeye")]),t._v("，里面包含1个"),n("code",[t._v("Log")]),t._v("事件和3个"),n("code",[t._v("function")]),t._v(": "),n("code",[t._v("hip()")]),t._v(", "),n("code",[t._v("pop()")]),t._v(", "),n("code",[t._v("yeye()")]),t._v("，输出都是”Yeye”。")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Yeye")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("event")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义3个function: hip(), pop(), man()，Log值为Yeye。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hip")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Yeye"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Yeye"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yeye")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Yeye"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("我们再定义一个爸爸合约"),n("code",[t._v("Baba")]),t._v("，让他继承"),n("code",[t._v("Yeye")]),t._v("合约，语法就是"),n("code",[t._v("contract Baba is Yeye")]),t._v("，非常直观。在"),n("code",[t._v("Baba")]),t._v("合约里，我们重写一下"),n("code",[t._v("hip()")]),t._v("和"),n("code",[t._v("pop()")]),t._v("这两个函数，加上"),n("code",[t._v("override")]),t._v("关键字，并将他们的输出改为"),n("code",[t._v("”Baba”")]),t._v("；并且加一个新的函数"),n("code",[t._v("baba")]),t._v("，输出也是"),n("code",[t._v("”Baba”")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Baba")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" Yeye"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继承两个function: hip()和pop()，输出改为Baba。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hip")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual override"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Baba"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual override"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Baba"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("baba")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Baba"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("我们部署合约，可以看到"),n("code",[t._v("Baba")]),t._v("合约里有4个函数，其中"),n("code",[t._v("hip()")]),t._v("和"),n("code",[t._v("pop()")]),t._v("的输出被成功改写成"),n("code",[t._v("”Baba”")]),t._v("，而继承来的"),n("code",[t._v("yeye()")]),t._v("的输出仍然是"),n("code",[t._v("”Yeye”")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"多重继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多重继承"}},[t._v("#")]),t._v(" 多重继承")]),t._v(" "),n("p",[n("code",[t._v("solidity")]),t._v("的合约可以继承多个合约。规则：")]),t._v(" "),n("p",[t._v("继承时要按辈分最高到最低的顺序排。比如我们写一个"),n("code",[t._v("Erzi")]),t._v("合约，继承"),n("code",[t._v("Yeye")]),t._v("合约和"),n("code",[t._v("Baba")]),t._v("合约，那么就要写成"),n("code",[t._v("contract Erzi is Yeye, Baba")]),t._v("，而不能写成"),n("code",[t._v("contract Erzi is Baba, Yeye")]),t._v("，不然就会报错。\n如果某一个函数在多个继承的合约里都存在，比如例子中的"),n("code",[t._v("hip()")]),t._v("和"),n("code",[t._v("pop()")]),t._v("，在子合约里必须重写，不然会报错。\n重写在多个父合约中重名函数时，"),n("code",[t._v("override")]),t._v("关键字后面要加上所有父合约名字，例如"),n("code",[t._v("override(Yeye, Baba)")]),t._v("。\n例子：")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Erzi")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" Yeye"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Baba"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继承两个function: hip()和pop()，输出值为Erzi。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hip")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("override")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Yeye"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Baba"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Erzi"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" virtual "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("override")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Yeye"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Baba"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Erzi"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("我们可以看到，"),n("code",[t._v("Erzi")]),t._v("合约里面重写了"),n("code",[t._v("hip()")]),t._v("和"),n("code",[t._v("pop()")]),t._v("两个函数，将输出改为"),n("code",[t._v("”Erzi”")]),t._v("，并且还分别从"),n("code",[t._v("Yeye")]),t._v("和"),n("code",[t._v("Baba")]),t._v("合约继承了"),n("code",[t._v("yeye()")]),t._v("和"),n("code",[t._v("baba()")]),t._v("两个函数。")]),t._v(" "),n("h3",{attrs:{id:"修饰器的继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修饰器的继承"}},[t._v("#")]),t._v(" 修饰器的继承")]),t._v(" "),n("p",[n("code",[t._v("Solidity")]),t._v("中的修饰器（"),n("code",[t._v("Modifier")]),t._v("）同样可以继承，用法与函数继承类似，在相应的地方加"),n("code",[t._v("virtual")]),t._v("和"),n("code",[t._v("override")]),t._v("关键字即可。")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Base1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modifier")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exactDividedBy2And3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" virtual "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" _a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Identifier")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" Base1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算一个数分别被2除和被3除的值，但是传入的参数必须是2和3的倍数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExactDividedBy2And3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _dividend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exactDividedBy2And3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_dividend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pure")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExactDividedBy2And3WithoutModifier")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_dividend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算一个数分别被2除和被3除的值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExactDividedBy2And3WithoutModifier")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _dividend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pure")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" div2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _dividend "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" div3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _dividend "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" div3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("上面的Identifier可以直接在代码中使用exactDividedBy2And3这个修饰器，也可以像下面一样重写修饰器。")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modifier")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exactDividedBy2And3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"构造函数的继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造函数的继承"}},[t._v("#")]),t._v(" 构造函数的继承")]),t._v(" "),n("p",[t._v("子合约有两种方法继承父合约的构造函数。举个简单的例子，父合约"),n("code",[t._v("A")]),t._v("里面有一个状态变量"),n("code",[t._v("a")]),t._v("，并由构造函数的参数来确定：")]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数的继承")]),t._v("\nabstract "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",[n("li",[t._v("在继承时声明父构造函数的参数，例如："),n("code",[t._v("contract B is A(1)")])]),t._v(" "),n("li",[t._v("在子合约的构造函数中声明构造函数的参数，例如：")])]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" A "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" _c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"调用父合约的函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#调用父合约的函数"}},[t._v("#")]),t._v(" 调用父合约的函数")]),t._v(" "),n("p",[t._v("子合约有两种方式调用父合约的函数，直接调用和利用"),n("code",[t._v("super")]),t._v("关键字。")]),t._v(" "),n("ol",[n("li",[t._v("直接调用：子合约可以直接用"),n("code",[t._v("父合约名.函数名()")]),t._v("的方式来调用父合约函数，例如"),n("code",[t._v("Yeye.pop()")]),t._v("。")])]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("callParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Yeye"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[n("code",[t._v("super")]),t._v("关键字：子合约可以利用"),n("code",[t._v("super.函数名()")]),t._v("来调用最近的父合约函数。"),n("code",[t._v("solidity")]),t._v("继承关系按声明时从右到左的顺序是："),n("code",[t._v("contract Erzi is Yeye, Baba")]),t._v("，那么"),n("code",[t._v("Baba")]),t._v("是最近的父合约，"),n("code",[t._v("super.pop()")]),t._v("将调用"),n("code",[t._v("Baba.pop()")]),t._v("而不是"),n("code",[t._v("Yeye.pop()")]),t._v("：")])]),t._v(" "),n("div",{staticClass:"language-solidity extra-class"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("callParentSuper")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将调用最近的父合约函数，Baba.pop()")]),t._v("\n        super"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"在remix上验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在remix上验证"}},[t._v("#")]),t._v(" 在Remix上验证")]),t._v(" "),n("ul",[n("li",[t._v("合约简单继承示例, 可以观察到Baba合约多了Yeye的函数\n"),n("img",{attrs:{src:a(382),alt:"13-1"}}),t._v(" "),n("img",{attrs:{src:a(383),alt:"13-2"}})]),t._v(" "),n("li",[t._v("合约多重继承可以参考简单继承的操作步骤来增加部署Erzi合约，然后观察暴露的函数以及尝试调用来查看日志")]),t._v(" "),n("li",[t._v("修饰器继承示例\n"),n("img",{attrs:{src:a(384),alt:"13-3"}}),t._v(" "),n("img",{attrs:{src:a(385),alt:"13-4"}}),t._v(" "),n("img",{attrs:{src:a(386),alt:"13-5"}})]),t._v(" "),n("li",[t._v("构造函数继承示例\n"),n("img",{attrs:{src:a(387),alt:"13-6"}}),t._v(" "),n("img",{attrs:{src:a(388),alt:"13-7"}})]),t._v(" "),n("li",[t._v("调用父合约示例\n"),n("img",{attrs:{src:a(389),alt:"13-8"}}),t._v(" "),n("img",{attrs:{src:a(390),alt:"13-9"}})])]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("这一讲，我们介绍了"),n("code",[t._v("solidity")]),t._v("继承的基本用法，包括简单继承，多重继承，修饰器和构造函数的继承，以及调用父合约中的函数。")])])}),[],!1,null,null,null);s.default=e.exports}}]);