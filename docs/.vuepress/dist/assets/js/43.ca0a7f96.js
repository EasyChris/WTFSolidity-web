(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{492:function(e,a,t){"use strict";t.r(a);var v=t(42),s=Object(v.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"solidity极简入门-19-接收eth-receive和fallback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#solidity极简入门-19-接收eth-receive和fallback"}},[e._v("#")]),e._v(" Solidity极简入门: 19. 接收ETH receive和fallback")]),e._v(" "),t("p",[e._v("我最近在重新学solidity，巩固一下细节，也写一个“Solidity极简入门”，供小白们使用（编程大佬可以另找教程），每周更新1-3讲。")]),e._v(" "),t("p",[e._v("欢迎关注我的推特："),t("a",{attrs:{href:"https://twitter.com/0xAA_Science",target:"_blank",rel:"noopener noreferrer"}},[e._v("@0xAA_Science"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("WTF技术社群discord，内有加微信群方法："),t("a",{attrs:{href:"https://discord.gg/5akcruXrsk",target:"_blank",rel:"noopener noreferrer"}},[e._v("链接"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("所有代码和教程开源在github（1024个star发课程认证，2048个star发社群NFT）: "),t("a",{attrs:{href:"https://github.com/AmazingAng/WTFSolidity",target:"_blank",rel:"noopener noreferrer"}},[e._v("github.com/AmazingAng/WTFSolidity"),t("OutboundLink")],1)]),e._v(" "),t("hr"),e._v(" "),t("p",[t("code",[e._v("Solidity")]),e._v("支持两种特殊的回调函数，"),t("code",[e._v("receive()")]),e._v("和"),t("code",[e._v("fallback()")]),e._v("，他们主要在两种情况下被使用：")]),e._v(" "),t("ol",[t("li",[e._v("接收ETH")]),e._v(" "),t("li",[e._v("处理合约中不存在的函数调用（代理合约proxy contract）")])]),e._v(" "),t("p",[e._v("注意⚠️：在solidity 0.6.x版本之前，语法上只有 "),t("code",[e._v("fallback()")]),e._v(" 函数，用来接收用户发送的ETH时调用以及在被调用函数签名没有匹配到时，来调用。\n0.6版本之后，solidity才将 "),t("code",[e._v("fallback()")]),e._v(" 函数拆分成 "),t("code",[e._v("receive()")]),e._v(" 和 "),t("code",[e._v("fallback()")]),e._v(" 两个函数。")]),e._v(" "),t("p",[e._v("我们这一讲主要讲接收ETH的情况。")]),e._v(" "),t("h2",{attrs:{id:"接收eth函数-receive"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接收eth函数-receive"}},[e._v("#")]),e._v(" 接收ETH函数 receive")]),e._v(" "),t("p",[t("code",[e._v("receive()")]),e._v("只用于处理接收"),t("code",[e._v("ETH")]),e._v("。一个合约最多有一个"),t("code",[e._v("receive()")]),e._v("函数，声明方式与一般函数不一样，不需要"),t("code",[e._v("function")]),e._v("关键字："),t("code",[e._v("receive() external payable { ... }")]),e._v("。"),t("code",[e._v("receive()")]),e._v("函数不能有任何的参数，不能返回任何值，必须包含"),t("code",[e._v("external")]),e._v("和"),t("code",[e._v("payable")]),e._v("。")]),e._v(" "),t("p",[e._v("当合约接收ETH的时候，"),t("code",[e._v("receive()")]),e._v("会被触发。"),t("code",[e._v("receive()")]),e._v("最好不要执行太多的逻辑因为如果别人用"),t("code",[e._v("send")]),e._v("和"),t("code",[e._v("transfer")]),e._v("方法发送"),t("code",[e._v("ETH")]),e._v("的话，"),t("code",[e._v("gas")]),e._v("会限制在"),t("code",[e._v("2300")]),e._v("，"),t("code",[e._v("receive()")]),e._v("太复杂可能会触发"),t("code",[e._v("Out of Gas")]),e._v("报错；如果用"),t("code",[e._v("call")]),e._v("就可以自定义"),t("code",[e._v("gas")]),e._v("执行更复杂的逻辑（这三种发送ETH的方法我们之后会讲到）。")]),e._v(" "),t("p",[e._v("我们可以在"),t("code",[e._v("receive()")]),e._v("里发送一个"),t("code",[e._v("event")]),e._v("，例如：")]),e._v(" "),t("div",{staticClass:"language-solidity extra-class"},[t("pre",{pre:!0,attrs:{class:"language-solidity"}},[t("code",[e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 定义事件")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("event")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Received")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("address")]),e._v(" Sender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("uint")]),e._v(" Value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 接收ETH时释放Received事件")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("receive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("external")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("payable")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("emit")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Received")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("有些恶意合约，会在"),t("code",[e._v("receive()")]),e._v(" 函数（老版本的话，就是 "),t("code",[e._v("fallback()")]),e._v(" 函数）嵌入恶意消耗"),t("code",[e._v("gas")]),e._v("的内容或者使得执行故意失败的代码，导致一些包含退款和转账逻辑的合约不能正常工作，因此写包含退款等逻辑的合约时候，一定要注意这种情况。")]),e._v(" "),t("h2",{attrs:{id:"回退函数-fallback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回退函数-fallback"}},[e._v("#")]),e._v(" 回退函数 fallback")]),e._v(" "),t("p",[t("code",[e._v("fallback()")]),e._v("函数会在调用合约不存在的函数时被触发。可用于接收ETH，也可以用于代理合约"),t("code",[e._v("proxy contract")]),e._v("。"),t("code",[e._v("fallback()")]),e._v("声明时不需要"),t("code",[e._v("function")]),e._v("关键字，必须由"),t("code",[e._v("external")]),e._v("修饰，一般也会用"),t("code",[e._v("payable")]),e._v("修饰，用于接收ETH:"),t("code",[e._v("fallback() external payable { ... }")]),e._v("。")]),e._v(" "),t("p",[e._v("我们定义一个"),t("code",[e._v("fallback()")]),e._v("函数，被触发时候会释放"),t("code",[e._v("fallbackCalled")]),e._v("事件，并输出"),t("code",[e._v("msg.sender")]),e._v("，"),t("code",[e._v("msg.value")]),e._v("和"),t("code",[e._v("msg.data")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-solidity extra-class"},[t("pre",{pre:!0,attrs:{class:"language-solidity"}},[t("code",[e._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// fallback")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("fallback")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("external")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("payable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("emit")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("fallbackCalled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("h2",{attrs:{id:"receive和fallback的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#receive和fallback的区别"}},[e._v("#")]),e._v(" receive和fallback的区别")]),e._v(" "),t("p",[t("code",[e._v("receive")]),e._v("和"),t("code",[e._v("fallback")]),e._v("都能够用于接收"),t("code",[e._v("ETH")]),e._v("，他们触发的规则如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("触发fallback() 还是 receive()?\n           接收ETH\n              |\n         msg.data是空？\n            /  \\\n          是    否\n          /      \\\nreceive()存在?   fallback()\n        / \\\n       是  否\n      /     \\\nreceive()   fallback()\n")])])]),t("p",[e._v("简单来说，合约接收"),t("code",[e._v("ETH")]),e._v("时，"),t("code",[e._v("msg.data")]),e._v("为空且存在"),t("code",[e._v("receive()")]),e._v("时，会触发"),t("code",[e._v("receive()")]),e._v("；"),t("code",[e._v("msg.data")]),e._v("不为空或不存在"),t("code",[e._v("receive()")]),e._v("时，会触发"),t("code",[e._v("fallback()")]),e._v("，此时"),t("code",[e._v("fallback()")]),e._v("必须为"),t("code",[e._v("payable")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("receive()")]),e._v("和"),t("code",[e._v("payable fallback()")]),e._v("均不存在的时候，向合约发送"),t("code",[e._v("ETH")]),e._v("将会报错。")]),e._v(" "),t("h2",{attrs:{id:"remix-演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remix-演示"}},[e._v("#")]),e._v(" Remix 演示")]),e._v(" "),t("ol",[t("li",[t("p",[e._v('首先在 Remix 上部署合约 "Fallback.sol"。')])]),e._v(" "),t("li",[t("p",[e._v('"VALUE" 栏中填入要发送给合约的金额（单位是 Wei），然后点击 "Transact"。\n'),t("img",{attrs:{src:"img/19-1.jpg",alt:""}})])]),e._v(" "),t("li",[t("p",[e._v('可以看到交易成功，并且触发了 "receivedCalled" 事件。\n'),t("img",{attrs:{src:"img/19-2.jpg",alt:""}})])]),e._v(" "),t("li",[t("p",[e._v('"VALUE" 栏中填入要发送给合约的金额（单位是 Wei），"CALLDATA" 栏中填入随意编写的'),t("code",[e._v("msg.data")]),e._v('，然后点击 "Transact"。\n'),t("img",{attrs:{src:"img/19-3.jpg",alt:""}})])]),e._v(" "),t("li",[t("p",[e._v('可以看到交易成功，并且触发了 "fallbackCalled" 事件。\n'),t("img",{attrs:{src:"img/19-4.jpg",alt:""}})])])]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("这一讲，我介绍了"),t("code",[e._v("Solidity")]),e._v("中的两种特殊函数，"),t("code",[e._v("receive()")]),e._v("和"),t("code",[e._v("fallback()")]),e._v("，他们主要在两种情况下被使用，他们主要用于处理接收"),t("code",[e._v("ETH")]),e._v("和代理合约"),t("code",[e._v("proxy contract")]),e._v("。")])])}),[],!1,null,null,null);a.default=s.exports}}]);