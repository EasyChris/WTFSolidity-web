(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{355:function(t,s,a){t.exports=a.p+"assets/img/2-1.af9bbc87.png"},356:function(t,s,a){t.exports=a.p+"assets/img/2-2.b46e1c37.png"},357:function(t,s,a){t.exports=a.p+"assets/img/2-3.d52b1e41.png"},484:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"solidity极简入门-2-数值类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solidity极简入门-2-数值类型"}},[t._v("#")]),t._v(" Solidity极简入门:2. 数值类型")]),t._v(" "),e("p",[t._v("我最近在重新学solidity，巩固一下细节，也写一个“Solidity极简入门”，供小白们使用（编程大佬可以另找教程），每周更新1-3讲。")]),t._v(" "),e("p",[t._v("欢迎关注我的推特："),e("a",{attrs:{href:"https://twitter.com/0xAA_Science",target:"_blank",rel:"noopener noreferrer"}},[t._v("@0xAA_Science"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("WTF技术社群discord，内有加微信群方法："),e("a",{attrs:{href:"https://discord.gg/5akcruXrsk",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("所有代码和教程开源在github（1024个star发课程认证，2048个star发社群NFT）: "),e("a",{attrs:{href:"https://github.com/AmazingAng/WTFSolidity",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/AmazingAng/WTFSolidity"),e("OutboundLink")],1)]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"solidity中的变量类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solidity中的变量类型"}},[t._v("#")]),t._v(" Solidity中的变量类型")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("数值类型(Value Type)")]),t._v("：包括布尔型，整数型等等，这类变量赋值时候直接传递数值。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("引用类型(Reference Type)")]),t._v("：包括数组和结构体，这类变量占空间大，赋值时候直接传递地址（类似指针）。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("映射类型(Mapping Type)")]),t._v(": "),e("code",[t._v("Solidity")]),t._v("里的哈希表。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("函数类型(Function Type)")]),t._v("："),e("code",[t._v("Solidity")]),t._v("文档里把函数归到数值类型，但我觉得他跟其他类型差别很大，所以单独分一类。")])])]),t._v(" "),e("p",[t._v("我们只介绍一些常用的类型，不常用的不讲。这篇介绍数值类型，第3讲介绍函数类型，第4讲介绍引用和映射。")]),t._v(" "),e("h2",{attrs:{id:"数值类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数值类型"}},[t._v("#")]),t._v(" 数值类型")]),t._v(" "),e("h3",{attrs:{id:"_1-布尔型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-布尔型"}},[t._v("#")]),t._v(" 1. 布尔型")]),t._v(" "),e("p",[t._v("布尔型是二值变量，取值为"),e("code",[t._v("true")]),t._v("或"),e("code",[t._v("false")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布尔值")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _bool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("布尔值的运算符，包括：")]),t._v(" "),e("ul",[e("li",[t._v("! （逻辑非）")]),t._v(" "),e("li",[t._v('&& （逻辑与， "and" ）')]),t._v(" "),e("li",[t._v('|| （逻辑或， "or" ）')]),t._v(" "),e("li",[t._v("== （等于）")]),t._v(" "),e("li",[t._v("!= （不等于）")])]),t._v(" "),e("p",[t._v("代码：")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布尔运算")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _bool1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("_bool"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取非")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _bool2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _bool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" _bool1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//与")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _bool3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _bool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" _bool1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//或")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _bool4 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _bool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _bool1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相等")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _bool5 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _bool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" _bool1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不相等")]),t._v("\n")])])]),e("p",[t._v("上面的代码中：变量"),e("code",[t._v("_bool")]),t._v("的取值是"),e("code",[t._v("true")]),t._v("；"),e("code",[t._v("_bool1")]),t._v("是"),e("code",[t._v("_bool")]),t._v("的非，为"),e("code",[t._v("false")]),t._v("；"),e("code",[t._v("_bool && _bool1")]),t._v("为"),e("code",[t._v("false")]),t._v("；"),e("code",[t._v("_bool || _bool1")]),t._v("为"),e("code",[t._v("true")]),t._v("；"),e("code",[t._v("_bool == _bool1")]),t._v("为"),e("code",[t._v("false")]),t._v("；"),e("code",[t._v("_bool != _bool1")]),t._v("为"),e("code",[t._v("true")]),t._v("。\n"),e("strong",[t._v("值得注意的是：")]),e("code",[t._v("&&")]),t._v(" 和 "),e("code",[t._v("||")]),t._v("运算符遵循短路规则，这意味着，假如存在"),e("code",[t._v("f(x) || g(y)")]),t._v("的表达式，如果"),e("code",[t._v("f(x)")]),t._v("是"),e("code",[t._v("true")]),t._v("，"),e("code",[t._v("g(y)")]),t._v("不会被计算，即使它和"),e("code",[t._v("f(x)")]),t._v("的结果是相反的")]),t._v(" "),e("h3",{attrs:{id:"_2-整型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-整型"}},[t._v("#")]),t._v(" 2. 整型")]),t._v(" "),e("p",[t._v("整型是"),e("code",[t._v("solidity")]),t._v("中的整数，最常用的包括")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整型")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _int "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整数，包括负数")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _uint "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正整数")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _number "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20220330")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 256位正整数")]),t._v("\n")])])]),e("p",[t._v("常用的整型运算符包括：")]),t._v(" "),e("ul",[e("li",[t._v("比较运算符（返回布尔值）： "),e("code",[t._v("<=")]),t._v("， "),e("code",[t._v("<")]),t._v("， "),e("code",[t._v("==")]),t._v("， "),e("code",[t._v("!=")]),t._v("， "),e("code",[t._v(">=")]),t._v("， "),e("code",[t._v(">")])]),t._v(" "),e("li",[t._v("算数运算符： "),e("code",[t._v("+")]),t._v("， "),e("code",[t._v("-")]),t._v("， 一元运算 "),e("code",[t._v("-")]),t._v("， "),e("code",[t._v("+")]),t._v("， "),e("code",[t._v("*")]),t._v("， "),e("code",[t._v("/")]),t._v("， "),e("code",[t._v("%")]),t._v("（取余），"),e("code",[t._v("**")]),t._v("（幂）")])]),t._v(" "),e("p",[t._v("代码：")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整数运算")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _number1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _number "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +，-，*，/")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _number2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指数")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _number3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取余数")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _numberbool "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _number2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _number3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比大小")]),t._v("\n")])])]),e("p",[t._v("大家可以跑一下代码，看看这4个变量分别是多少。答对奖励个"),e("code",[t._v("POAP")]),t._v("？")]),t._v(" "),e("h3",{attrs:{id:"_3-地址类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-地址类型"}},[t._v("#")]),t._v(" 3. 地址类型")]),t._v(" "),e("p",[t._v("地址类型(address)存储一个 20 字节的值（以太坊地址的大小）。地址类型也有成员变量，并作为所有合约的基础。有普通的地址和可以转账"),e("code",[t._v("ETH")]),t._v("的地址（"),e("code",[t._v("payable")]),t._v("）。"),e("code",[t._v("payable")]),t._v("的地址拥有"),e("code",[t._v("balance")]),t._v("和"),e("code",[t._v("tranfer()")]),t._v("两个成员，方便查询"),e("code",[t._v("ETH")]),t._v("余额以及转账。")]),t._v(" "),e("p",[t._v("代码")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 地址")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _address "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x7A58c0Be72BE218B41C608b7Fe7C5bB630736C71")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("payable")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _address1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("payable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// payable address，可以转账、查余额")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 地址类型的成员")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" balance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _address1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("balance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// balance of address")]),t._v("\n")])])]),e("p",[t._v("下一讲介绍函数的时候，会介绍如何使用地址类型。")]),t._v(" "),e("h3",{attrs:{id:"_4-定长字节数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-定长字节数组"}},[t._v("#")]),t._v(" 4. 定长字节数组")]),t._v(" "),e("p",[t._v("字节数组"),e("code",[t._v("bytes")]),t._v("分两种，一种定长（"),e("code",[t._v("byte")]),t._v(", "),e("code",[t._v("bytes8")]),t._v(", "),e("code",[t._v("bytes32")]),t._v("），另一种不定长。定长的属于数值类型，不定长的是引用类型（之后讲）。\n定长"),e("code",[t._v("bytes")]),t._v("可以存一些数据，消耗"),e("code",[t._v("gas")]),t._v("比较少。")]),t._v(" "),e("p",[t._v("代码：")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 固定长度的字节数组")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _byte32 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MiniSolidity"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" _byte "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _byte32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),e("p",[e("code",[t._v("MiniSolidity")]),t._v("变量以字节的方式存储进变量"),e("code",[t._v("_byte32")]),t._v("，转换成"),e("code",[t._v("16进制")]),t._v("为："),e("code",[t._v("0x4d696e69536f6c69646974790000000000000000000000000000000000000000")])]),t._v(" "),e("p",[e("code",[t._v("_byte")]),t._v("变量存储"),e("code",[t._v("_byte32")]),t._v("的第一个字节，为"),e("code",[t._v("0x4d")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"_5-枚举-enum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-枚举-enum"}},[t._v("#")]),t._v(" 5. 枚举 enum")]),t._v(" "),e("p",[t._v("枚举（"),e("code",[t._v("enum")]),t._v("）是"),e("code",[t._v("solidity")]),t._v("中用户定义的数据类型。它主要用于为"),e("code",[t._v("uint")]),t._v("分配名称，是程序易于阅读和维护。它与"),e("code",[t._v("C语言")]),t._v("中的"),e("code",[t._v("enum")]),t._v("类似，把名称从"),e("code",[t._v("0")]),t._v("开始"),e("code",[t._v("uint")]),t._v("表示：")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用enum将uint 0， 1， 2表示为Buy, Hold, Sell")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActionSet")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Buy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Hold"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Sell "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建enum变量 action")]),t._v("\n    ActionSet action "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ActionSet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("它可以显式的和"),e("code",[t._v("uint")]),t._v("相互转换，并会检查转换的正整数是否在枚举的长度内，不然会报错：")]),t._v(" "),e("div",{staticClass:"language-solidity extra-class"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enum可以和uint显式的转换")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("enumToUint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("enum")]),t._v("的一个比较冷门的变量，几乎没什么人用。")]),t._v(" "),e("h2",{attrs:{id:"在remix上验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在remix上验证"}},[t._v("#")]),t._v(" 在remix上验证")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("部署合约后可以查看每个类型的变量具体的数值\n"),e("img",{attrs:{src:a(355),alt:"2-1.png"}})])]),t._v(" "),e("li",[e("p",[t._v("enum和uint转换的示例\n"),e("img",{attrs:{src:a(356),alt:"2-2.png"}}),t._v(" "),e("img",{attrs:{src:a(357),alt:"2-3.png"}})])])]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("在第二讲，我们介绍了"),e("code",[t._v("solidity")]),t._v("中4种变量类型，并详细介绍了数值变量（"),e("code",[t._v("value type")]),t._v(")中的布尔型，整型，地址，定长字节数组和枚举。之后我们会介绍其他几种类型。")])])}),[],!1,null,null,null);s.default=n.exports}}]);